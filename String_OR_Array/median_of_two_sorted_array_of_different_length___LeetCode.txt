/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*
https://www.geeksforgeeks.org/median-two-sorted-arrays-different-sizes-ologminn-m/
https://www.youtube.com/watch?v=LPFhl65R7ww
*/
package medianoftwosortedarrayofdifferentlength;

/**
 *
 * @author mahbub
 */
public class MedianOfTwoSortedArrayOfDifferentLength {
    
    public double findMeidanfrom2sortedArray(int input1[],int input2[])
    {
        if(input1.length == 0){
            int l = input2.length;
            return (double)input2[l/2];
        }
        if(input2.length == 0){
            int l = input1.length;
            return (double)input1[l/2];
        }
        if(input1.length > input2.length){
            return findMeidanfrom2sortedArray(input2,input1);
        }
        int x = input1.length;
        int y = input2.length;
        int low = 0;
        int high = x;
        while(low<=high){
            int partitionX = (low+high)/2;
            int partitionY = ((x+y+1)/2)-partitionX;
            
            int maxleftX = (partitionX == 0) ? Integer.MIN_VALUE: input1[partitionX - 1];
            int maxleftY = (partitionX == 0) ? Integer.MIN_VALUE: input2[partitionY - 1] ;
            int minRightX = (partitionY == x)?Integer.MAX_VALUE:input1[partitionX];
            int minRightY = (partitionY == y)?Integer.MAX_VALUE:input2[partitionY];
            
            if(maxleftX <= minRightY && maxleftY<= minRightY){
                if((x+y)%2 == 0){
                    return (double)Math.max(maxleftX, maxleftY) + Math.min(minRightX,minRightY );
                }
                else{
                    return (double)Math.max(maxleftX, maxleftY);
                }
            }
            else if(maxleftX > maxleftY){
                high = partitionX - 1; 
            }
            else{
                low = partitionX+1;
            }
        }
        return 0;
    }
    public static void main(String[] args) {
       int[] x = {1, 3, 8, 9, 15};
        int[] y = {7, 11, 19, 21, 18, 25};
        MedianOfTwoSortedArrayOfDifferentLength m = new MedianOfTwoSortedArrayOfDifferentLength();
        
        System.out.println(m.findMeidanfrom2sortedArray(x, y));
    }
    
}
